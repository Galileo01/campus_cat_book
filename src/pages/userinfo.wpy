<template>
  <view class="userinfo container">
    <user-baseinfo
      :userinfo="userinfo"
      @avatarTap="avatarTap"
    />
    <view class="others">
      <van-tabs
        :active="currentTab"
        color="#409EFF"
      >
        <van-tab
          title="所有动态"
          name="tweets"
        >
          <tweet-item
            v-for="(i, index) in showlist"
            :item="i"
            @collect="collectTap"
            @comment="seeMore"
            @star="starTap"
            @enlarge="enlargeTap"
            @seeMore="seeMore"
            @seeUserInfo="seeUserInfo"
          ></tweet-item>
        </van-tab>
        <van-tab
          title="猫猫收藏"
          name="cats"
        >
          <cat-item
            v-for="(i, index) in myCatCollections"
            :info="i"
            @tap="seeCatdetail(i._id)"
          ></cat-item>
        </van-tab>
      </van-tabs>
    </view>
    <!--图片放大-->
    <enlarge-img
      :visible="enlargeVisible"
      :imgSrc="imgSrc"
      @enlargeClose="enlargeClose"
    ></enlarge-img>
    <back-top
      v-if="backTopVisible"
      @hide="backTopVisible = false"
    ></back-top>
  </view>
</template>

<style lang="less">
.userinfo {
  background-color: #f7f8fa;
  min-height: 100vh;

  .others {
    .van-ellipsis {
      font-size: 13px;
    }
  }
}
</style>

<script>
import wepy from '@wepy/core';
import tweetMixin from 'common/tweetMixin';
import { getInfo, getColectedCats } from 'network/user';
import { getByUser } from 'network/tweet';
import { getStaticUrl } from 'common/utils';
wepy.page({
  mixins: [tweetMixin],
  data: {
    id: 1,
    userinfo: {},
    myTweets: [], //我的所有个人动态
    showlist: [], //用于展示的 动态
    myCatCollections: [], //我的猫猫收藏
    currentTab: 'tweets',
    //图片放大
    enlargeVisible: false,
    imgSrc: '',
    //回到顶端
    backTopVisible: false,
  },
  methods: {
    async getData() {
      const infoRes = await getInfo(this.id);
      console.log('userinfo', infoRes);
      if (!infoRes.data)
        return wx.showToast({
          title: '数据为空，请重试',
          icon: 'none',
        });

      const userinfo = infoRes.data;
      if (userinfo.avatar)
        userinfo.avatar = getStaticUrl('user', userinfo.avatar);

      const tweetsRes = await getByUser({ name: userinfo.name });
      console.log('tweetsRes', tweetsRes);
      if (!tweetsRes.data)
        return wx.showToast({
          title: '数据为空，请重试',
          icon: 'none',
        });
      const { list: tweets, total } = tweetsRes.data;

      const catsRes = await getColectedCats(this.id);
      console.log(catsRes);
      if (!catsRes.data)
        return wx.showToast({
          title: '数据为空，请重试',
          icon: 'none',
        });
      const catCollects = catsRes.data;

      //合并 多次 setData 为一次
      this.$wx.setData({
        userinfo,
        myTweets: tweets,
        showlist: tweets,
        currentLength: tweets.length,
        total,
        myCatCollections: catCollects,
      });
    },
    //点击头像
    avatarTap(avatar) {
      console.log(avatar);
      this.imgSrc = avatar;
      this.enlargeVisible = true;
    },
    // //点击图片放大
    enlargeTap(src) {
      // console.log(src);
      this.imgSrc = src;
      this.enlargeVisible = true;
    },
    //关闭放大
    enlargeClose() {
      this.enlargeVisible = false;
      this.imgSrc = '';
    },
    seeCatdetail(id) {
      this.$navigate('/pages/catdetail?id=' + id);
    },
  },
  onLoad({ id }) {
    this.id = id;
    this.getData();
  },
});
</script>

<config>
{
  navigationBarTitleText: '用户信息',
    usingComponents: {
     "user-baseinfo":'../components/com/user_baseinfo',
     "tweet-item":'../components/com/tweet_item',
     "cat-item":'../components/com/cat_item',
      "back-top":'../components/com/back_top/back_top',
      "enlarge-img":'../components/com/enlarge_img',
      "van-popup": '../components/vant/popup',
      "van-tabs": '../components/vant/tabs',
      "van-tab": '../components/vant/tab',

    }
}
</config>
