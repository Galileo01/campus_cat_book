<template>
  <view class="profile container">
    <view
      class="login"
      v-if="!isLogined"
    >
      <van-button
        type="info"
        size="normal"
        color="#409eff"
        round
        open-type="getUserInfo"
        bindgetuserinfo="_login"
      >登录</van-button>
      <text class="info">登录体验完整功能</text>
    </view>
    <user-baseinfo
      :userinfo="userinfo"
      mode="my"
      @avatarTap="showEnlarge"
      @edit="editInfo"
      v-else
    ></user-baseinfo>
    <view class="oprations">
      <van-cell-group>
        <van-cell
          title="我的动态"
          is-link
          @tap="seeMoreData('tweet_m')"
        />
        <van-cell
          title="猫猫收藏"
          is-link
          @tap="seeMoreData('cats')"
        />
        <van-cell
          title="动态收藏"
          is-link
          @tap="seeMoreData('tweet_c')"
        />
        <van-cell
          title="权限申请"
          is-link
          @tap="navgateTo('/pages/right_apply')"
        />
        <van-cell
          title="问题反馈"
          is-link
          @tap="navgateTo('/pages/feedback')"
        />
        <van-cell
          title="关于"
          is-link
          @tap="$navigate('/pages/about')"
        />
      </van-cell-group>
    </view>
    <!--头像放大-->
    <van-popup
      :show="enlargeVisible"
      closeable
      @close="closeEnlarge"
      class="enlarge_img"
    >
      <view class="preview">
        <image :src="imgSrc"></image>
        <view class="btns">
          <van-button
            type="info"
            size="small"
            @tap="uploadTap"
            v-if="currentMode === 'show'"
          >上传</van-button>
          <van-button
            type="info"
            size="small"
            @tap="uploadImg"
            v-else
          >确认上传</van-button>
          <van-button
            type="default"
            size="small"
            @tap="downloadImg"
            :disabled="!imgSrc"
            v-if="currentMode === 'show'"
          >下载</van-button>
        </view>
      </view>
    </van-popup>
    <!--信息编辑 弹框-->
    <van-popup
      :show="editPopupVisible"
      closeable
      @close="closeEdit"
      class="info_edit"
      position="bottom"
      custom-style="height: 100%;"
    >
      <van-cell-group class="form">
        <van-field
          :value="formData.name"
          label="昵称"
          placeholder="请输入昵称"
          clearable
          @change="inputChange($event, 'name')"
          class="name"
        />
        <van-field
          :value="formData.campus"
          label="学校"
          placeholder="请输入学校"
          clearable
          @change="inputChange($event, 'campus')"
        />
        <van-field
          :value="formData.signature"
          label="个性签名"
          type="textarea"
          placeholder="请输入个性签名"
          autosize
          clearable
          @change="inputChange($event, 'signature')"
        />
        <van-cell
          title="性别"
          class="sex"
        >
          <van-radio-group
            :value="formData.sex"
            @change="inputChange($event, 'sex')"
          >
            <van-radio name="1">男</van-radio>
            <van-radio name="2">女</van-radio>
          </van-radio-group>
        </van-cell>
      </van-cell-group>
      <view class="btns">
        <van-button
          type="danger"
          size="small"
          color="#E6A23C"
          @tap="closeEdit"
        >取消</van-button>
        <van-button
          type="info"
          size="small"
          color="#409eff"
          @tap="submit"
        >提交</van-button>
      </view>
    </van-popup>
  </view>
</template>

<style lang="less">
.profile {
  .login {
    background-color: #fff;
    display: flex;
    flex-direction: column;
    align-items: center;
    padding: 40rpx;

    .info {
      color: #409eff;
      text-align: center;
      margin-top: 20rpx;
    }
  }

  .enlarge_img {
    .preview {
      background-color: rgba(0, 0, 0, 0.7);
      /*和遮罩层 颜色一致 */
      position: relative;
    }

    .btns {
      width: 100%;
      display: flex;
      justify-content: space-between;
    }
  }

  .info_edit {
    input,
    textarea {
      width: 70% !important;
    }

    .sex {
      .van-cell__title {
        -webkit-flex: none;
        flex: none;
      }

      van-radio-group {
        display: flex;
        padding: 10rpx 20rpx;
        margin-left: 90rpx;

        .van-radio {
          width: 30vw;
        }
      }
    }

    .btns {
      position: fixed;
      bottom: 40rpx;
      left: 50%;
      transform: translate(-50%);
      display: flex;

      justify-content: space-between;
      width: 60vw;
    }
  }
}
</style>

<script>
import wepy from '@wepy/core';
import store from 'store/index.js';
import { login, updateInfo, updateAvatar } from 'network/user';
import { getStaticUrl } from 'common/utils';
wepy.page({
  data: {
    userinfo: store.userinfo,
    enlargeVisible: false,
    imgSrc: '',
    currentMode: 'show', //当前 头像放大框的模式
    editPopupVisible: false,
    formData: {},
    preName: '', //之前 的昵称
  },
  computed: {
    store() {
      return store;
    },
    isLogined() {
      return Object.keys(this.userinfo).length !== 0;
    },
  },
  methods: {
    showEnlarge(src) {
      this.enlargeVisible = true;
      this.imgSrc = src;
    },
    closeEnlarge() {
      this.enlargeVisible = false;
      this.imgSrc = '';
      this.currentMode = 'show';
    },
    //上传头像图片
    uploadTap() {
      wx.chooseImage({
        count: 1,
        sizeType: ['compressed'],
        sourceType: ['album', 'camera'],
        success: function (res) {
          console.log(res.tempFilePaths);
          this.imgSrc = res.tempFilePaths[0];
          this.currentMode = 'upload';
        }.bind(this),
      });
    },
    //上传 新头像
    async uploadImg() {
      const res = await updateAvatar(this.imgSrc);
      console.log(res);
      if (res.includes('failed'))
        return wx.showToast({
          title: '上传失败，请重试',
          icon: 'none',
        });
      this.userinfo.avatar = getStaticUrl('user', res);
      this.closeEnlarge(); //关闭 弹框
    },
    //下载到本地
    downloadImg() {
      wx.getImageInfo({
        src: this.imgSrc,
        success: function (ret) {
          var path = ret.path;
          wx.saveImageToPhotosAlbum({
            filePath: path,
            success(result) {
              console.log(result);
            },
          });
        },
      });
    },
    editInfo() {
      this.editPopupVisible = true;
    },
    //每个表单字段的 change
    inputChange({ $wx: { detail } }, key) {
      console.log(detail, key);
      this.formData[key] = detail;
    },
    //提交新的 用户信息
    async submit() {
      wx.showLoading({
        title: '提交中',
      });
      const res = await updateInfo({
        preName: this.preName,
        ...this.formData,
      });
      if (!res.data) {
        console.log(res.msg);
        return wx.showToast({
          title: '提交失败,请重试',
          icon: 'none',
        });
      }
      wx.hideLoading();
      store.infoRefresh().then((info) => {
        this.userinfo = info;
      }); //刷新 用户数据
      this.editPopupVisible = false;
    },
    closeEdit() {
      this.editPopupVisible = false;
      this.formData = this.userinfo;
    },
    seeMoreData(tab) {
      if (!this.isLogined)
        return wx.showToast({
          title: '请先登录',
          icon: 'none',
        });
      this.$navigate('/pages/user_more_data?tab=' + tab);
    },
    //导航到其他页面
    navgateTo(path) {
      if (!this.isLogined)
        return wx.showToast({
          title: '请先登录',
          icon: 'none',
        });
      this.$navigate(path);
    },
    // 第一次 使用 手动进行登录  触发 button 获取用户信息
    async _login({
      $wx: {
        detail: { userInfo },
      },
    }) {
      if (userInfo) {
        const res = await login(userInfo);
        store.userinfo = res.data;
        console.log(res.data);
        this.userinfo = {
          ...res.data,
        }; //保证两个变量不会指向一个引用
        this.formData = {
          ...res.data,
        };
        this.preName = this.userinfo.name;
        wx.setStorage({
          key: 'nickName',
          data: res.data.name,
        });
      }
    },
  },
  async onLoad() {
    if (wx.getStorageSync('isLogined')) {
      this.userinfo = {
        ...store.userinfo,
      }; //保证两个变量不会指向一个引用
      this.formData = {
        ...store.userinfo,
      };
    }
    this.preName = store.userinfo.name;
  },
});
</script>

<config>
{
    navigationBarTitleText: '个人中心',
    usingComponents: {
      "user-baseinfo":'../components/com/user_baseinfo',
      "van-cell":'../components/vant/cell',
      "van-cell-group":'../components/vant/cell-group',
      "van-popup":'../components/vant/popup',
      "van-icon":'../components/vant/icon',
      "van-button":'../components/vant/button',
      'van-radio':'../components/vant/radio',
      'van-radio-group':'../components/vant/radio-group',
      'van-field':'../components/vant/field',
    }
}
</config>
