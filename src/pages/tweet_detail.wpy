<template>
  <view class="tweet_detail container">
    <view class="baseinfo">
      <tweet-item
        :item="tweetInfo"
        mode="detail"
        @enlarge="enlargeTap"
        @seeUserInfo="seeUserInfo"
      ></tweet-item>
    </view>
    <view class="comments">
      <view
        class="comment-item"
        v-for="(item, index) in comments"
      >
        <view class="avater">
          <image
            :src="avatarUrls[index]"
            @tap="seeUserInfo(item.userinfo._id)"
          ></image>
        </view>
        <view class="content">
          <view>{{ item.userinfo.name }}:</view>
          <view class="text">{{ item.content }}</view>
          <view class="bottom">
            <view class="left"><text class="time">{{ item.created_time }}</text>
              <text class="campus">{{ item.userinfo.campus }}</text>
            </view>
            <view class="right">
              <van-icon
                name="good-job-o"
                size="30rpx"
                @tap="starComment(item._id)"
              />
              <text>{{ item.starCount }}</text>
            </view>
          </view>
        </view>
      </view>
    </view>
    <view class="btns">
      <view
        class="btn collect"
        @tap="collectTap"
      > <text>{{isCollected?'取消':''}}收藏</text></view>
      <view
        class="btn"
        @tap="showCommentInput"
      >
        <text>添加评论</text>
      </view>
      <view
        class="btn"
        @tap="starTap"
      >
        <text>点赞</text>
      </view>
    </view>
    <!--图片放大-->
    <enlarge-img
      :visible="imgDialogVisible"
      :imgSrc="imgSrc"
      @enlargeClose="closeImgDialog"
    ></enlarge-img>
    <!--评论弹框-->
    <van-popup
      :show="commentInputVivisble"
      @close="closeInput"
      position="bottom"
      custom-style="height: 90%;"
      closeable
      class="comment-popup"
    >
      <view class="comment-input">
        <van-field
          :value="mycomment"
          placeholder="请输入评论"
          autosize
          type="textarea"
          @input="commentInput"
        />
        <van-button
          class="send"
          round
          type="info"
          size="small"
          @tap="sendComment"
        >发送</van-button>
      </view>
    </van-popup>
    <back-top
      v-if="backTopVisible"
      @hide="backTopVisible = false"
      bottom="100"
    ></back-top>
  </view>
</template>

<style lang="less">
.tweet_detail {
  background-color: #f7f8fa;

  .comments {
    margin-bottom: 80rpx;

    .comment-item {
      padding: 20rpx 20rpx 10rpx 20rpx;
      margin: 10rpx 0;
      background-color: #fff;
      font-size: 12px;
      display: flex;

      .avater {
        image {
          width: 60rpx;
          height: 60rpx;
          border-radius: 50%;
        }
      }

      .content {
        margin-left: 40rpx;
        width: 600rpx;

        .text {
          padding: 10rpx 0;
        }

        .bottom {
          display: flex;
          justify-content: space-between;

          .time {
            color: #a497a6;
            font-size: 9px;
          }

          .campus {
            margin-left: 10rpx;
            color: #409eff;
          }

          .right {
            margin-right: 20rpx;
            display: flex;

            text {
              margin-left: 5rpx;
            }
          }
        }
      }
    }
  }

  .btns {
    position: fixed;
    width: 100vw;
    bottom: 0;
    // padding-top: 10rpx;
    display: flex;
    height: 80rpx;
    align-items: center;
    justify-content: space-around;
    border-top: 2rpx #d7d8da solid;
    background-color: #fff;
    font-size: 14px;

    .btn {
      display: flex;
      align-items: center;

      text {
        margin-left: 10rpx;
        color: #409eff;
      }
    }
    .collect {
      .isCollect {
        color: #353535;
      }
    }
  }

  .comment-popup .van-popup .van-icon {
    z-index: 99;
    font-size: 20px;
  }

  .comment-input {
    padding: 20rpx;
    width: 100%;
    height: 30vh;
    position: relative;

    van-field,
    .van-field__body,
    textarea {
      width: 80vw;
    }

    .send {
      position: absolute;
      bottom: 20rpx;
      right: 60rpx;
    }
  }
}
</style>

<script>
import wepy from '@wepy/core';
import { getById, star } from 'network/tweet';
import { collectTweet, cancelCollectTweet } from 'network/user';
import {
  getByTweetId as getCommentsByTweetId,
  createComment,
  starComment,
} from 'network/comment';
import { getStaticUrl } from 'common/utils';
import store from 'store';
wepy.page({
  data: {
    id: 0,
    tweetInfo: {},
    comments: [],
    imgSrc: '',
    imgDialogVisible: false,
    commentInputVivisble: false,
    mycomment: '',
    backTopVisible: false,
    isCollected: false,
  },
  computed: {
    avatarUrls() {
      if (this.comments.length === 0) return [];
      else
        return this.comments.map((item) =>
          getStaticUrl('user', item.userinfo.avatar)
        );
    },
  },
  methods: {
    //获取评论
    async getComments() {
      const res = await getCommentsByTweetId(this.id);
      if (res.data) {
        this.comments = res.data;
      } else {
        console.log(res.msg);
      }
    },
    //获取 细腻些
    async getTweetInfo() {
      const res = await getById(this.id);
      if (res.data) {
        this.tweetInfo = res.data;
      } else {
        console.log(res.msg);
      }
    },
    enlargeTap(src) {
      // console.log(src);
      this.imgSrc = src;
      this.imgDialogVisible = true;
    },
    closeImgDialog() {
      this.imgDialogVisible = false;
      this.$nextTick(() => {
        this.imgSrc = '';
      });
    },
    //展示评论输入框
    showCommentInput() {
      this.commentInputVivisble = true;
    },
    commentInput({ $wx: { detail } }) {
      //   console.log(detail);
      this.mycomment = detail;
    },
    closeInput() {
      this.commentInputVivisble = false;
      this.mycomment = '';
    },
    async starTap() {
      const res = await star(this.id);
      if (res.data)
        wx.showToast({
          title: '点赞成功',
          icon: 'none',
        });
      else {
        wx.showToast({
          title: '点赞失败',
          icon: 'none',
        });
        console.log(res.msg);
      }
    },
    async collectTap() {
      let oprate;
      //优化逻辑
      oprate = this.isCollected ? cancelCollectTweet : collectTweet;
      const res = await oprate(this.id);
      if (res.data) {
        wx.showToast({
          title: '操作成功',
          icon: 'none',
        });
        this.isCollected = this.isCollected ? false : true; //改变状态
      } else {
        wx.showToast({
          title: '操作失败',
          icon: 'none',
        });
      }
    },
    async starComment(id) {
      const res = await starComment(id);
      if (res.msg)
        return wx.showToast({
          title: '点赞失败',
          icon: 'none',
        });
      wx.showToast({
        title: '点赞成功',
        icon: 'none',
      });

      for (const item of this.comments) {
        if (item._id === id) {
          item.starCount++;
          break;
        }
      }
    },
    seeUserInfo(id) {
      console.log(id);
      this.$navigate('/pages/userinfo?id=' + id);
    },
    //创建 评论
    async sendComment() {
      if (this.mycomment) {
        wx.showLoading({
          title: '发送中',
        });

        const res = await createComment({
          tweet_id: this.id,
          content: this.mycomment,
        });
        console.log(res);
        if (res.data) {
          wx.showToast({
            title: '评论成功',
            icon: 'none',
          });
          this.getComments();
        }
      } else {
        wx.showToast({
          title: '评论为空',
          icon: 'none',
        });
      }
    },
  },
  onLoad({ id }) {
    console.log(id);
    this.id = id;
    wx.showNavigationBarLoading();
    this.getTweetInfo();
    this.getComments();
    wx.hideNavigationBarLoading();
  },
  onShow() {
    //保证 当前 页面使用的用户数据是最新的
    store.infoRefresh().then(() => {
      if (store.userinfo.tweets_co.includes(this.id)) this.isCollected = true;
    });
  },
  onPageScroll({ scrollTop }) {
    if (scrollTop > 300) {
      this.backTopVisible = true;
    } else this.backTopVisible = false;
  },
});
</script>

<config>
{
    navigationBarTitleText: '动态详情',
    usingComponents: {
     'tweet-item':'../components/com/tweet_item',
      'enlarge-img':'../components/com/enlarge_img',
       'back-top':'../components/com/back_top/back_top',

     'van-icon':'../components/vant/icon',
       "van-popup": '../components/vant/popup',
       "van-field":'../components/vant/field',
       "van-button":'../components/vant/button',
    }
}</config>
