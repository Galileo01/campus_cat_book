<template>
  <view class="tweet_item">
    <view
      class="header"
      @tap="seeMore"
    >
      <image
        :src="avatar"
        @tap.stop="seeUserInfo"
      ></image>
      <view class="baseinfo">
        <view class="username">{{ item.userinfo.name }}</view>
        <view class="info">
          <text>{{ item.tweetTime }}</text>
          <text>来自</text>
          <text class="campus">{{ item.userinfo.campus }}</text>
        </view>
      </view>
    </view>
    <view
      class="content"
    >
      <view class="text">
        {{ item.text }}
      </view>
      <view
        class="imgs"
        v-if="item.imgs.length > 0"
      >
        <van-image
          :src="i"
          v-for="(i, index) in imgsUrl"
          :key="index"
          :width="imgWidth + 'vw'"
          fit="widthFix"
          use-error-slot
          lazy-load
          @tap.stop="$emit('enlarge', i)"
          :class="{ 'single-one': item.imgs.length === 1 }"
        >
          <text
            class="load-error"
            slot="error"
          >加载失败</text>
        </van-image>
      </view>

      <view
        class="video"
        v-if="item.video"
      >
        <video
          :src="videoUrl"
          show-mute-btn
        ></video>
      </view>
    </view>
    <view class="btns">
      <view
        class="btn"
        @tap="collectTap"
        v-if="mode === 'item'"
      >
        <van-icon
          :name="isCollected?'star':'star-o'"
          size="30rpx"
        /><text>{{
          item.collectCount
        }}</text></view>
      <view
        class="btn"
        @tap="seeMore"
      >
        <van-icon
          name="comment-o"
          :size="mode === 'item' ? '30rpx' : '40rpx'"
        />
        <text>{{ item.commentCount }}</text>
      </view>
      <view
        class="btn"
        @tap="starTap"
        v-if="mode === 'item'"
      >
        <van-icon
          name="good-job-o"
          size="30rpx"
        />
        <text>{{ item.starCount }}</text>
      </view>
    </view>
  </view>
</template>
<style lang="less">
.tweet_item {
  padding: 20rpx 20rpx 10rpx 20rpx;
  margin: 10rpx 0;
  font-size: 13px;
  background-color: #fff;
  .header {
    display: flex;
    image {
      width: 60rpx;
      height: 60rpx;
      border-radius: 50%;
    }
    .baseinfo {
      margin-left: 10rpx;
      .info {
        color: #a497a6;
        font-size: 10px;
        text {
          margin-right: 10rpx;
        }
        text.campus {
          color: #409eff;
        }
      }
    }
  }
  .content {
    margin-top: 10rpx;
    font-size: 12px;
    .imgs {
      margin-top: 10rpx;
      display: flex;
      flex-wrap: wrap;
      van-image {
        margin: 0 5rpx;
      }
      /*只有一张图片时 使一张图片保持居中 */
      .single-one {
        margin: 0 auto;
      }
    }
    .video {
      margin-top: 10rpx;
      max-width: 80vw;
      margin: 0 auto;
      video {
        height: 300rpx;
        max-width: 80vw;

        display: block;
      }
    }
  }
  .btns {
    margin-top: 10rpx;
    padding-top: 10rpx;
    display: flex;
    justify-content: space-around;
    border-top: 2rpx #d7d8da solid;
    font-size: 10px;
    .btn {
      display: flex;
      align-items: center;
      text {
        margin-left: 10rpx;
      }
    }
  }
}
</style>
<script>
import wepy from '@wepy/core';
import { getStaticUrl } from 'common/utils';
import tweetMixin from 'common/tweetMixin';
import store from 'store';
wepy.component({
  mixins: [tweetMixin],
  data: {
    isCollected: false,
  },
  props: {
    item: {
      type: Object,
      default: {},
    }, //当前展示的模式   item/detail  在社区页面 已item一项一项的展示，在 详情页 detail
    mode: {
      type: String,
      default: 'item',
    },
  },
  computed: {
    //根据图片数量  计算 每个图片的宽度
    imgWidth() {
      if (this.item && this.item.imgs && this.item.imgs.length > 0) {
        const length = this.item.imgs.length;
        let width = '';
        if (length == 1) width = '80';
        else if (length % 3 === 0) width = '30';
        else if (length % 2 === 0) width = '45';
        else if ((length - 1) % 3 == 0) width = '30';
        else if ((length - 1) % 2 == 0) width = '45';
        // console.log(width, this.item.id);
        return width;
      }
      return 0;
    },
    //用户头像
    avatar() {
      if (!this.item.userinfo) return '';
      return getStaticUrl('user', this.item.userinfo.avatar);
    },
    imgsUrl() {
      if (!this.item.imgs) return [];
      return this.item.imgs.map((img) => getStaticUrl('tweet', img));
    },
    videoUrl() {
      if (!this.item.video) return '';
      return getStaticUrl('tweet', this.item.video);
    },
  },
  //组件本身 在所在页面布局完成
  ready() {
    console.log(store.userinfo.tweets_co,this.item._id);
    if (store.userinfo.tweets_co.includes(this.item._id))
      this.isCollected = true;
  },
});
</script>

<config>
{
    usingComponents: {
      "van-image": '../vant/image',
       "van-icon": '../vant/icon',
    }
}
</config>
